---
# TODO: Gets stuck if SELinux is enabled
# TODO: Remove
- name: Pi-hole repair
  become: true
  command:
    argv:
      - "{{ pihole_installer_path }}"
      - --unattended
  environment:
    PIHOLE_SKIP_OS_CHECK: "true"
  register: pihole_repair
  when: pihole_installer_ran is undefined or pihole_installer_ran is skipped
  notify: Pi-hole config

# Dirty hack
- name: Pi-hole reload
  include_tasks: reload.yml

# Recreate gravity database from text files
- name: Pi-hole gravity
  become: true
  command: pihole -g --recreate
  when:
    - pihole_installer_ran is undefined or pihole_installer_ran is skipped
    - pihole_repair is undefined or pihole_repair is skipped

# For idempotency after a Pi-hole repair
# TODO: Remove
- name: Pi-hole config
  become: true
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: '644'
  loop:
    - { src: setupVars.conf.j2, dest: "{{ pihole_setupvarsfile }}" }
    - { src: pihole-FTL.conf.j2, dest: "{{ pihole_config_path }}/pihole-FTL.conf" }
