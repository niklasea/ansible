---
- name: Create directories
  become: true
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: '755'
  loop:
    - path: "{{ compose_dir }}"

# If instance or game configs are defined, each defined config will be applied, undefined configs will simply be skipped.
# Both when-conditions and default-omits are needed to prevent Ansible errors on undefined variables.
- name: Apply configs
  become: true
  ansible.builtin.blockinfile:
    path: "{{ data_dir }}/{{ item.path }}"
    state: present
    create: true
    block: "{{ item.block }}"
  when: item.condition
  loop:
    - path: "config-lgsm/{{ image_version }}server/instance.cfg"
      block: "{{ instance_config | default(omit) }}"
      condition: "{{ instance_config is defined }}"
    - path: "{{ game_config.path | default(omit) }}"
      block: "{{ game_config.config | default(omit) }}"
      condition: "{{ game_config is defined }}"
  register: _linuxgsm_server_configuration_file
  no_log: true

- name: "Add Docker compose file {{ instance_name }}"
  become: true
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ compose_dir }}/docker-compose.yml"
    mode: '640'
  register: _linuxgsm_docker_compose_file

# community.docker.docker_compose currently does not support docker-compose >= 2.0.0
- name: "Stop LinuxGSM {{ linuxgsm_version }}"
  become: true
  ansible.builtin.command:
    cmd: "docker compose down"
    chdir: "{{ compose_dir }}"
  when: _linuxgsm_server_configuration_file is changed or _linuxgsm_docker_compose_file is changed

- name: "Start LinuxGSM {{ linuxgsm_version }}"
  become: true
  ansible.builtin.command:
    cmd: "docker compose up -d"
    chdir: "{{ compose_dir }}"
