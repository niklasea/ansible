---
- name: Install firewall
  become: true
  ansible.builtin.package:
    name: firewalld
    state: present

# Add firewall rules twice with different protocol defaults to emulate UFW 'any' usage.
- name: Set firewalld rich rules (TCP default)
  become: true
  firewalld:
    rich_rule: "rule {{ 'family=ipv4 source address=' ~ item.src if item.src is defined else '' }} port port={{ item.port | regex_replace('^(?P<start>.+):(?P<end>\\d+)$', '\\g<start>-\\g<end>') }} protocol={{ item.proto | default('tcp') }} accept"
    state: "{{ 'disabled' if item.rule is defined and item.rule in [ 'deny', 'reject', 'disabled' ] else 'enabled' }}"
    permanent: true
    immediate: true
  when: firewall_rules is defined
  loop: "{{ firewall_rules }}"

- name: Set firewalld rich rules (UDP default)
  become: true
  firewalld:
    rich_rule: "rule {{ 'family=ipv4 source address=' ~ item.src if item.src is defined else '' }} port port={{ item.port | regex_replace('^(?P<start>.+):(?P<end>\\d+)$', '\\g<start>-\\g<end>')  }} protocol={{ item.proto | default('udp') }} accept"
    state: "{{ 'disabled' if item.rule is defined and item.rule in [ 'deny', 'reject', 'disabled' ] else 'enabled' }}"
    permanent: true
    immediate: true
  when: firewall_rules is defined
  loop: "{{ firewall_rules }}"

# - name: Open firewalld port
#   become: true
#   firewalld:
#     state: "{{ 'disabled' if item.rule is defined and item.rule in [ 'deny', 'reject', 'disabled' ] else 'enabled' }}"
#     port: "{{ item.port }}/{{ item.proto | default('udp') }}"
#     permanent: true
#     immediate: true
#   when: firewall_rules is defined
#   loop: "{{ firewall_rules }}"
