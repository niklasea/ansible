
log_format '$http_x_forwarded_for $remote_addr [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $upstream_response_time';

server {
    listen 80 default_server;
    server_name {{ nginx_domain }};

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$host$request_uri;

    # Enables or disables emitting nginx version on error pages and in the "Server" response header field.
    server_tokens off;
}

server {
    listen 443 ssl http2;
    server_name {{ nginx_domain }};

    ssl_certificate {{ nginx_tls_cacert }};        # path to your cacert.pem
    ssl_certificate_key {{ nginx_tls_privkey }};    # path to your privkey.pem

    # modern configuration. tweak to your needs.
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age={{ nginx_hsts_max_age }};

    proxy_set_header X-Forwarded-For $remote_addr;

    # Enables or disables emitting nginx version on error pages and in the "Server" response header field.
    server_tokens off;

    location / {
        proxy_pass         http://127.0.0.1:{{ nginx_proxy_pass_port }};
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_read_timeout  1200s;
        proxy_connect_timeout  1200s;
        proxy_read_timeout  1200s;
        proxy_send_timeout  1200s;
        send_timeout  1200s;

        client_max_body_size 0;
    }
}
