---
internal_network_ipv4: '172.21.1.0/24'
guest_network_ipv4: '172.21.9.0/24'

gateway_address: "{{ internal_network_ipv4 | ansible.utils.ipaddr('1') }}"

home_domain: "{{ vault_home_domain }}"
local_domain: "internal.{{ home_domain }}"
dhcp_address: "{{ gateway_address }}"
dhcp_range:
  start: "{{ internal_network_ipv4 | ansible.utils.ipaddr('50') }}"
  end: "{{ internal_network_ipv4 | ansible.utils.ipaddr('-2') }}"
dhcp_dns_addresses:
  - "{{ hosts['internal-docker']['ipv4_address'] }}"
dhcp_ntp_addresses:
  - "{{ hosts['internal-docker']['ipv4_address'] }}"

haproxy_docker_internal_network: '10.0.0.0/16'

ansible_become_password: "{{ vault_ansible_become_password }}"

haproxy_tls_certificate_path: "{{ haproxy_compose_dir }}/certificate.pem"
certbot_domain: "{{ inventory_hostname_short }}.{{ local_domain }}"
certbot_email: "{{ vault_certificate_notification_email }}"
certbot_use_dns: true
certbot_dns_plugin: cloudflare
certbot_dns_credentials: |
  # https://certbot-dns-cloudflare.readthedocs.io/en/stable/#credentials
  dns_{{ certbot_dns_plugin }}_api_token = {{ vault_cloudflare.zone_key }}
certbot_dns_propagation: 15
certbot_deploy_hook: |
  #!/usr/bin/env bash

  cat "$RENEWED_LINEAGE/privkey.pem" "$RENEWED_LINEAGE/cert.pem" > "{{ haproxy_tls_certificate_path }}"
  docker compose -f /etc/compose/haproxy/docker-compose.yml restart

vpn_network_ipv4: '172.21.0.0/24'
wireguard_client_dns_servers: "{{ dhcp_dns_addresses }}"

wifi_pass: "{{ vault_wifi_pass }}"

hosts:
  vyos:
    ipv4_address: "{{ gateway_address }}"
  ordos:
    ipv4_address: "{{ internal_network_ipv4 | ansible.utils.ipaddr('2') }}"
  arrakis: # Primary network switch.
    hardware_address: '08:BD:43:75:B3:B9'
    ipv4_address: "{{ internal_network_ipv4 | ansible.utils.ipaddr('3') }}"
  arvon: # WiFi access point.
    hardware_address: '98:DA:C4:63:68:D6'
    ipv4_address: "{{ internal_network_ipv4 | ansible.utils.ipaddr('6') }}"
  public-docker: # Public server.
    ipv4_address: "{{ internal_network_ipv4 | ansible.utils.ipaddr('20') }}"
  internal-docker: # Internal server.
    ipv4_address: "{{ internal_network_ipv4 | ansible.utils.ipaddr('21') }}"

stubby_upstream: |
  - address_data: 9.9.9.11
    tls_auth_name: "dns.quad9.net"
  - address_data: 149.112.112.11
    tls_auth_name: "dns.quad9.net"
stubby_options:
  idle_timeout: 9000

pihole_webpassword: "{{ vault_pihole_webpassword }}"
pihole_gateway_address: "{{ gateway_address }}"
pihole_domain: "{{ local_domain }}"
pihole_dnssec: 'false'
pihole_dnsmasq_reverse_server:
  server_ip: "{{ dhcp_address }}"
  network: "{{ dhcp_address }}/{{ ansible_default_ipv4.netmask }}"
  domain: "{{ pihole_domain }}"

pihole_ignore_localhost: 'yes'
pihole_maxdbdays: 2

pihole_adlists:
  - "{{ query('file', 'pihole_adlists.txt') }}"
  - "{{ query('url', 'https://v.firebog.net/hosts/lists.php?type=tick') }}"
pihole_regexlists:
  - "{{ query('file', 'pihole_regexlist.txt') }}"
  - "{{ query('url', 'https://raw.githubusercontent.com/mmotti/pihole-regex/master/regex.list') }}"
pihole_blacklists:
  - "{{ query('file', 'pihole_blacklist.txt') }}"
  - "{{ query('file', 'hpHosts_exp.txt') }}"
  - "{{ query('file', 'hpHosts_grm.txt') }}"
  - "{{ query('file', 'hpHosts_mmt.txt') }}"
pihole_whitelists:
  - "{{ query('file', 'pihole_whitelist.txt') }}"

pihole_dnsmasq_custom: |
  # --strict-order uses reverse order in dnsmasq conf files (see http://lists.thekelleys.org.uk/pipermail/dnsmasq-discuss/2015q3/009816.html)
  strict-order
  min-cache-ttl=2
  max-cache-ttl=86400
